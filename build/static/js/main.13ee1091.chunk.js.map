{"version":3,"sources":["context/Context.js","context/Provider.js","pages/Listpage.js","App.js","index.js"],"names":["Context","createContext","Provider","children","useState","planetsData","setPlanets","planetDataStorage","setPlanetDataStorage","fetchStatus","setLoad","filterByName","name","input","setInput","options","setOptions","column","setColumn","comparison","setComparison","value","setValue","filterArray","setFilterArray","fetchAPI","a","fetch","api","json","apiJSON","data","results","useEffect","console","log","length","map","filterData","columnIn","comparisonIn","valueIn","filteredArray","filter","aux","Number","filterAction","includes","toLowerCase","updatePlanets","filterPlanets","prevState","optionsFilter","removeFilters","removeItem","arrayRemoved","array","Listpage","useContext","className","src","alt","data-testid","type","onChange","event","target","onClick","option","key","class","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.13ee1091.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nconst Context = createContext();\r\n\r\nexport default Context;\r\n","import React, { useEffect, useState } from 'react';\r\nimport propTypes from 'prop-types';\r\nimport Context from './Context';\r\n\r\nfunction Provider({ children }) {\r\n  const [planetsData, setPlanets] = useState([]);\r\n  const [planetDataStorage, setPlanetDataStorage] = useState([]);\r\n  const [fetchStatus, setLoad] = useState(false);\r\n  const [input, setInput] = useState({ filterByName: { name: '' } });\r\n  const [options, setOptions] = useState([\r\n    'population',\r\n    'orbital_period',\r\n    'diameter',\r\n    'rotation_period',\r\n    'surface_water']);\r\n\r\n  // Montagem do filtro.\r\n  const [column, setColumn] = useState('population');\r\n  const [comparison, setComparison] = useState('maior que');\r\n  const [value, setValue] = useState(0);\r\n  const [filterArray, setFilterArray] = useState([]);\r\n\r\n  // Montagem da lista.\r\n  const fetchAPI = async () => {\r\n    const api = await fetch('https://swapi-trybe.herokuapp.com/api/planets/');\r\n    const apiJSON = await api.json();\r\n    const data = apiJSON.results;\r\n    setPlanets(data);\r\n    setPlanetDataStorage(data);\r\n    setLoad(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  // Adição de Filtros\r\n  const filterPlanets = () => {\r\n    setFilterArray((prevState) => [...prevState, { column, comparison, value }]);\r\n    const optionsFilter = options.filter((aux) => aux !== column);\r\n    setOptions(optionsFilter);\r\n  };\r\n\r\n  // Filtrando a Lista.\r\n  const filterAction = () => {\r\n    if (filterArray.length > 0) {\r\n      filterArray.map((filterData) => {\r\n        const { column: columnIn, comparison: comparisonIn, value: valueIn } = filterData;\r\n\r\n        if (comparisonIn === 'maior que') {\r\n          const filteredArray = planetDataStorage.filter((aux) => Number(aux[columnIn]) > Number(valueIn));\r\n          return setPlanetDataStorage(filteredArray);\r\n        }\r\n        if (comparisonIn === 'menor que') {\r\n          const filteredArray = planetDataStorage\r\n            .filter((aux) => Number(aux[columnIn]) < Number(valueIn));\r\n          return setPlanetDataStorage(filteredArray);\r\n        }\r\n        if (comparisonIn === 'igual a') {\r\n          const filteredArray = planetDataStorage\r\n            .filter((aux) => Number(aux[columnIn]) === Number(valueIn));\r\n          return setPlanetDataStorage(filteredArray);\r\n        }\r\n        return 'ERROR';\r\n      });\r\n    } else {\r\n      return setPlanetDataStorage(planetsData);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(filterArray);\r\n    filterAction();\r\n  }, [filterArray]);\r\n\r\n  // Input.\r\n  const updatePlanets = () => {\r\n    const filteredArray = planetsData\r\n      .filter((aux) => aux.name.includes(input.filterByName.name.toLowerCase()));\r\n    setPlanetDataStorage(filteredArray);\r\n  };\r\n\r\n  useEffect(() => {\r\n    updatePlanets();\r\n  }, [input, planetsData]);\r\n\r\n  // Remoção de Items.\r\n  const removeItem = (aux) => {\r\n    const arrayRemoved = filterArray.filter((array) => array !== aux);\r\n    setFilterArray(arrayRemoved);\r\n    setPlanetDataStorage(planetsData);\r\n    setOptions((prevState) => [aux.column, ...prevState]);\r\n  };\r\n\r\n  const removeFilters = () => {\r\n    setFilterArray([]);\r\n  };\r\n\r\n  return (\r\n    <Context.Provider\r\n      value={ {\r\n        planetDataStorage,\r\n        fetchStatus,\r\n        filterPlanets,\r\n        options,\r\n        filterArray,\r\n        removeFilters,\r\n        removeItem,\r\n        value,\r\n        column,\r\n        comparison,\r\n        setValue,\r\n        setComparison,\r\n        setColumn,\r\n        setInput,\r\n      } }\r\n    >\r\n      {children}\r\n    </Context.Provider>\r\n  );\r\n}\r\n\r\nProvider.propTypes = {\r\n  children: propTypes.node.isRequired,\r\n};\r\n\r\nexport default Provider;\r\n","import React, { useContext } from 'react';\r\nimport Context from '../context/Context';\r\n\r\nfunction Listpage() {\r\n  const {\r\n    planetDataStorage,\r\n    fetchStatus,\r\n    filterPlanets,\r\n    options,\r\n    filterArray,\r\n    removeFilters,\r\n    removeItem,\r\n    value,\r\n    column,\r\n    comparison,\r\n    setValue,\r\n    setComparison,\r\n    setColumn,\r\n    setInput,\r\n  } = useContext(Context);\r\n\r\n  return (\r\n    <section>\r\n\r\n      <header className=\"logo-header\">\r\n        <img className=\"logo\" src=\"https://i.imgur.com/Z70vbgv.png\" alt=\"logo\" />\r\n      </header>\r\n\r\n      <section className=\"input-div\">\r\n        <input\r\n          className=\"main-input\"\r\n          data-testid=\"name-filter\"\r\n          type=\"text\"\r\n          onChange={ (event) => setInput({ filterByName: { name: event.target.value } }) }\r\n        />\r\n      </section>\r\n\r\n      <section className=\"menu\">\r\n        <select\r\n          data-testid=\"column-filter\"\r\n          value={ column }\r\n          onClick={ (event) => setColumn(event.target.value) }\r\n          onChange={ (event) => setColumn(event.target.value) }\r\n        >\r\n          { options.map((option, key) => (\r\n            <option value={ option } key={ key }>{ option }</option>\r\n          ))}\r\n        </select>\r\n\r\n        <select\r\n          data-testid=\"comparison-filter\"\r\n          value={ comparison }\r\n          onChange={ (event) => setComparison(event.target.value) }\r\n        >\r\n          <option value=\"maior que\">maior que</option>\r\n          <option value=\"menor que\">menor que</option>\r\n          <option value=\"igual a\">igual a</option>\r\n        </select>\r\n\r\n        <input\r\n          type=\"number\"\r\n          data-testid=\"value-filter\"\r\n          value={ value }\r\n          onChange={ (event) => setValue(event.target.value) }\r\n        />\r\n\r\n        <button\r\n          type=\"button\"\r\n          data-testid=\"button-filter\"\r\n          onClick={ filterPlanets }\r\n        >\r\n          Filtrar\r\n        </button>\r\n\r\n        <button\r\n          data-testid=\"button-remove-filters\"\r\n          type=\"button\"\r\n          onClick={ removeFilters }\r\n        >\r\n          Remover Filtros\r\n        </button>\r\n      </section>\r\n\r\n      <section className=\"filters\">\r\n        {filterArray.map((aux) => (\r\n          <div data-testid=\"filter\" key={ aux.column } className=\"filter-container\">\r\n            <p>{`${aux.column}  ${aux.comparison} ${aux.value}`}</p>\r\n            <button type=\"button\" onClick={ () => removeItem(aux) }>X</button>\r\n          </div>))}\r\n      </section>\r\n      <section class=\"table\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Rotation Period</th>\r\n              <th>Orbital Period</th>\r\n              <th>Diameter</th>\r\n              <th>Climate</th>\r\n              <th>Gravity</th>\r\n              <th>Terrain</th>\r\n              <th>Surface Water</th>\r\n              <th>Population</th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {fetchStatus && planetDataStorage.map((aux) => (\r\n              <tr key={ aux.name }>\r\n                <td>{aux.name}</td>\r\n                <td>{aux.rotation_period}</td>\r\n                <td>{aux.orbital_period}</td>\r\n                <td>{aux.diameter}</td>\r\n                <td>{aux.climate}</td>\r\n                <td>{aux.gravity}</td>\r\n                <td>{aux.terrain}</td>\r\n                <td>{aux.surface_water}</td>\r\n                <td>{aux.population}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </section>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Listpage;\r\n","import React from 'react';\r\nimport Provider from './context/Provider';\r\nimport './App.css';\r\nimport Listpage from './pages/Listpage';\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider>\r\n      <Listpage />\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}